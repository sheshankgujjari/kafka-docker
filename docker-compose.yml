version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
  kafka:
    image: wurstmeister/kafka
    links:
       - zookeeper
    command: "/bin/bash /broker_helpers/configure_and_start_broker.sh"
    volumes:
      - ./broker_helpers:/broker_helpers

  #Elasticsearch Node 1
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.4.0
    build: elasticsearch/
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    container_name: node1
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
      - cluster.name=test-kafka
      - node.name=test-kafka-0
      - bootstrap.memory_lock=true
      - discovery.zen.minimum_master_nodes=2
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 10g
    networks:
      - esnet

  #Elasticsearch Node 2
  # elasticsearch2:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:5.4.0
  #   build: elasticsearch/
  #   container_name: node2
  #   volumes:
  #     - esdata2:/usr/share/elasticsearch/data
  #   environment:
  #     - cluster.name=test-kafka
  #     - node.name=test-kafka-1
  #     - ES_JAVA_OPTS=-Xms512m -Xmx512m
  #     - discovery.zen.ping.unicast.hosts=elasticsearch
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   mem_limit: 10g
  #   networks:
  #     - esnet

  #Kibana Node
  kibana:
    image: docker.elastic.co/kibana/kibana:5.4.3
    build: kibana/
    container_name: kibana-node
    ports:
      - "5601:5601"
    networks:
      - esnet
    depends_on:
      - elasticsearch

  #logstash
  logstash:
    image: logstash:latest
    links:
      - elasticsearch:elasticsearch
    ports:
      - 12201:12201
    networks:
      - esnet
    depends_on:
      - elasticsearch
    command: logstash -e "input { kafka { bootstrap_servers => '172.17.0.2:9092' client_id => 'logstash' topics => 'test' } tcp { port => 12602 codec => json } }  output { elasticsearch { hosts => 'localhost:9200' } }"

#Volumes per node to use local
volumes:
    esdata1:
      driver: local
    esdata2:
      driver: local

#Networks
networks:

  esnet:
    driver: bridge
